import numpy as np
from imageio import imread
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from matplotlib import cm
import numpy as np
from numpy.random import normal, uniform

#function for creating design matrix
def create_X(x, y, n ):
	if len(x.shape) > 1:
		x = np.ravel(x)
		y = np.ravel(y)

	N = len(x)
	l = int((n+1)*(n+2)/2)		# Number of elements in beta
	X = np.ones((N,l))

	for i in range(1,n+1):
		q = int((i)*(i+1)/2)
		for k in range(i+1):
			X[:,q+k] = (x**(i-k))*(y**k)

	return X

#path to the TIFF file
file_path = 'C:/Users/krist/Downloads/sognsvann.tif'
# Load the terrain
terrain = imread(file_path)

N = 1000
m = 5 # polynomial order
terrain = terrain[:N,:N]

#create mesh of image pixels
x = np.linspace(0,1,np.shape(terrain)[0])
y = np.linspace(0, 1, np.shape(terrain)[1])
x_mesh, y_mesh = np.meshgrid(x,y)

z = terrain
X = create_X(x_mesh,y_mesh, m)

#2D plot of the terrain
plt.figure(figsize=(10,10))
plt.title('2D Terrain plot')
plt.imshow(terrain, cmap= 'viridis', extent=(0, 1, 0, 1)) #colormap
plt.xlabel('East')
plt.ylabel('North')
plt.colorbar()

#3D plot
fig = plt.figure(figsize=(10,10))
ax =fig.add_subplot(111, projection='3d')

#grid for x and y 
x_grid, y_grid = np.meshgrid(x,y)

surface = ax.plot_surface(x_grid,y_grid, z, cmap = cm.coolwarm, linewidth = 0, antialiased = False )

ax.set_title('3D Terrain plot')
ax.set_xlabel('East')
ax.set_ylabel('North')
ax.set_zlabel('Elevation')
fig.colorbar(surface,shrink=0.5, aspect=5)

plt.show()


